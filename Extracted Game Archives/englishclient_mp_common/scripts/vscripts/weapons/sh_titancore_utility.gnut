//

#if(false)

#endif

global function MpTitanabilityFusionCore_Init

global function OnAbilityCharge_TitanCore

global function OnAbilityStart_TitanCore

#if(false)





#endif

global function SoulTitanCore_GetNextAvailableTime
global function SoulTitanCore_GetExpireTime
global function IsTitanCoreFiring

global function CheckCoreAvailable
global function IsCoreAvailable
global function IsCoreChargeAvailable

global function CoreChargeBegin

#if(false)







#endif

const EMP_BLAST_EFFECT = $"P_titan_core_atlas_blast"
const EMP_BLAST_CHARGE_EFFECT = $"P_titan_core_atlas_charge"

#if(false)











#endif

#if(false)




#endif

void function MpTitanabilityFusionCore_Init()
{
	PrecacheParticleSystem( EMP_BLAST_CHARGE_EFFECT )
	PrecacheParticleSystem( EMP_BLAST_EFFECT )
	//
	//
	//
	//
	//
	//
	//
	//
	//

	RegisterSignal( "CoreActivated" )
	RegisterSignal( "CoreBegin" )
	RegisterSignal( "CoreEnd" )

	#if(false)


#endif
}

#if(false)








#endif

bool function IsTitanCoreFiring( entity titan )
{
	if ( !titan.IsTitan() )
		return false

	entity soul = titan.GetTitanSoul()
	float time = Time()
	return time >= soul.GetCoreChargeStartTime() && time <= soul.GetCoreChargeExpireTime()
}

bool function OnAbilityCharge_TitanCore( entity weapon )
{
	if ( !CheckCoreAvailable( weapon ) )
		return false

	entity player = weapon.GetWeaponOwner()

	#if(CLIENT)
	if ( !InPrediction() || IsFirstTimePredicted() )
	{
	#endif
		//
	#if(false)

#endif
		CoreChargeBegin( player, player, weapon )
	#if(CLIENT)
	}
	#endif

	player.Signal( "CoreActivated" )

	return true
}

bool function OnAbilityStart_TitanCore( entity weapon )
{
	entity titan = weapon.GetWeaponOwner()
	//
	titan.Signal( "CoreBegin" )

	#if(false)

#endif

	if ( titan.IsPlayer() )
	{
		PlayerUsedOffhand( titan, weapon )
	}

	return true
}

#if(false)


//










//








#endif

bool function CheckCoreAvailable( entity weapon )
{
	return false
}

#if(false)


//













//

































































































#endif //

bool function CoreChargeBegin( entity player, entity titan, entity weapon )
{
	entity soul = titan.GetTitanSoul()

#if(CLIENT)
	thread CoreActivatedVO( player )
#if(false)




#endif
#endif

#if(false)














#endif //

	return true
}

#if(false)









#endif //

bool function IsCoreChargeAvailable( entity player, entity soul )
{
	if ( soul == null )
		return false

	if ( TitanDamageRewardsTitanCoreTime() )
		return SoulTitanCore_GetNextAvailableTime( soul ) >= 1.0

	if ( Time() >= SoulTitanCore_GetNextAvailableTime( soul ) && IsCoreAvailable( player ) )
		return true

	return false
}

bool function IsCoreAvailable( entity player )
{
	entity coreWeapon = player.GetOffhandWeapon( OFFHAND_EQUIPMENT )

	if ( coreWeapon == null )
		return false

	return ( GetDoomedState( player ) == false || CoreAvailableDuringDoomState() )
}

var function GetPassiveFromWeapon( entity weapon )
{
	var passiveName = weapon.GetWeaponInfoFileKeyField( "passive" )
	if ( passiveName == null )
		return null

	switch ( passiveName )
	{
	}

	return null
}

#if(false)















//
//
//








//











































//
//
//







//















//
//
//









//




//






































#endif //

float function SoulTitanCore_GetNextAvailableTime( entity soul )
{
	return soul.GetNextCoreChargeAvailable()
}

float function SoulTitanCore_GetExpireTime( entity soul )
{
	return soul.GetCoreChargeExpireTime()
}
