
global function TitanCockpit_PlayDialog
global function TitanCockpitDialog_RodeoAnnounce
global function ServerCallback_TitanFallWarning

global function SCB_TitanDialogue

void function TitanCockpit_PlayDialog( entity player, string conversationName )
{
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
}

void function TitanCockpitDialog_RodeoAnnounce( entity titan )
{
	//

	//
	//
	//
	//
	//
	//
	//
	//
	//
}


bool function ShouldPlayTitanCockpitDialogueIfPlayerIsNotTitan( entity player, string conversationName )
{
	if ( player.IsTitan() )
		return true

	switch ( conversationName )
	{
		case "disembark":
		case "manualEjectNotice":
		case "autoEngageGrunt":
		case "autoEngagePilot":
		case "autoEngageTitan":
		case "autoEngageTitans":
		case "sonarPulse":
			return true
	}

	return false
}

void function ServerCallback_TitanFallWarning()
{
	entity player = GetLocalClientPlayer()

	if ( !player.IsTitan() )
		return

	TitanCockpit_PlayDialog( player, "hostileTitanInbound" )
}

void function SCB_TitanDialogue( int voEnum )
{
	entity player = GetLocalClientPlayer()

	if ( !player.IsTitan() )
		return

//
//
//
//
//
//
//

	string vo
	switch ( voEnum )
	{
		case eTitanVO.RODEO_RAKE:
			//
			vo = "killEnemyRodeo"
			break

		case eTitanVO.ENEMY_EJECTED:
			vo = "ejectedEnemy"
			break

		case eTitanVO.FRIENDLY_EJECTED:
			vo = "ejectedFriendly"
			break

		case eTitanVO.FRIENDLY_TITAN_DEAD:
			vo = "elimFriendlyTitan"
			break

		case eTitanVO.ENEMY_TITAN_DEAD:
			vo = "elimEnemyTitan"
			break

		case eTitanVO.PILOT_HELPING:
			vo = "assistedByFriendlyPilot"
			break

		case eTitanVO.FRIENDLY_TITAN_HELPING:
			vo = "assistedByFriendlyTitan"
			break

		case eTitanVO.ENEMY_TARGET_ELIMINATED:
			vo = "elimTarget"
			break

		case eTitanVO.FRIENDLY_RODEOING_ENEMY:
			vo = "friendlyRodeoOnEnemyTitan"
			break

		default:
			printt( "Unknown titan vo enum " + voEnum )
	}

	TitanCockpit_PlayDialog( player, vo )
}
