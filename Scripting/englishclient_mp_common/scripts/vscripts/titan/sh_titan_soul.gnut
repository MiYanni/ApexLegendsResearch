untyped

global function TitanSoul_Init

#if(false)










#endif

global function HasSoul
global function SetStanceKneel
global function SetStanceKneeling
global function SetStanceStanding
global function SetStanceStand
global function GetSoulPlayerSettings
global function IsSoul
global function GetSoulTitanSubClass
global function GetTitanSoulShieldHealth
global function GetTitanSoulDoomedHealth

void function TitanSoul_Init()
{
	RegisterSignal( "OnSoulTransfer" )
	RegisterSignal( "OnTitanDeath" )
	RegisterSignal( "OnTitanTaken" )
	RegisterSignal( "OnPlayerHasTitanInWorld" )
	RegisterSignal( "TitanKilled" )

	#if(false)



#endif

	RegisterSignal( "OnTitanLost" ) //
}

#if(false)




#endif //

//
function IsSoul( entity ent )
{
	if ( ent == null )
		return false

	#if(CLIENT)
		return ent instanceof C_TitanSoul
	#else
		return ent instanceof CTitanSoul
	#endif
}

string function GetSoulTitanSubClass( entity soul )
{
	asset settings = GetSoulPlayerSettings( soul )
	return GetGlobalSettingsString( settings, "subclass" )
}

asset function GetSoulPlayerSettings( entity soul )
{
	return soul.GetPlayerSettingsName()
}

bool function HasSoul( entity ent )
{
	return ( ent.IsNPC() || ent.IsPlayer() ) && IsValid( ent.GetTitanSoul() )
}

#if(false)










//

























//
//














//
//
//
//
//
//




//




























































//



















//










//























//
























#endif //

void function SetStanceKneel( entity soul )
{
	soul.SetStance( STANCE_KNEEL )
	//
}

void function SetStanceKneeling( entity soul )
{
	soul.SetStance( STANCE_KNEELING )
	//
}

void function SetStanceStanding( entity soul )
{
	soul.SetStance( STANCE_STANDING )
	//
}

void function SetStanceStand( entity soul )
{
	soul.SetStance( STANCE_STAND )
	//
}

float function GetTitanSoulShieldHealth( entity soul )
{
	asset playerSettings = GetSoulPlayerSettings( soul )
	return GetGlobalSettingsFloat( playerSettings, "healthShield" )
}

float function GetTitanSoulDoomedHealth( entity soul )
{
	asset playerSettings = GetSoulPlayerSettings( soul )
	float doomedHealth = GetGlobalSettingsFloat( playerSettings, "healthDoomed" )
	return doomedHealth
}
