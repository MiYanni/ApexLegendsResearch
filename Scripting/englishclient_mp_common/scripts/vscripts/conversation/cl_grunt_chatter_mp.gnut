global function ServerCallback_PlayGruntChatterMP
global function ClGruntChatter_MP_Init

struct
{
	int currentVoiceIndex = -1 //
} file

void function ClGruntChatter_MP_Init()
{
	AddCreateCallback( "npc_soldier", ClGruntChatter_MP_GruntVoiceIndexInit )
}

void function IncrementVoiceIndex()
{
	++file.currentVoiceIndex
	if ( file.currentVoiceIndex >= 6 ) //
		file.currentVoiceIndex = 0
}

void function ClGruntChatter_MP_GruntVoiceIndexInit( entity grunt )
{
	IncrementVoiceIndex()
	grunt.ai.gruntVoiceIndex = file.currentVoiceIndex
	//
}

void function ServerCallback_PlayGruntChatterMP( int conversationIndex, int gruntEHandle )
{
	entity grunt = GetEntityFromEncodedEHandle( gruntEHandle )
	string conversationName = GetConversationName( conversationIndex )

	//
	bool printDebug = GetDialogueDebugLevel() > 0

	if ( printDebug )
		printt( "ServerCallback_PlayGruntChatterMP: " + conversationName )

	entity player = GetLocalClientPlayer()

	if ( !ShouldPlayGruntChatterMPLine( conversationName, player, grunt ) )
		return

	int priority = GetConversationPriority( conversationName )

	string alias = GenerateGruntChatterMPAlias( grunt, conversationName )

	PlayOneLinerConversationOnEntWithPriority( conversationName, alias, grunt, priority ) //
}

string function GenerateGruntChatterMPAlias( entity grunt, string conversationName )
{
	int voiceIndex = grunt.ai.gruntVoiceIndex + 1 //
	string alias = GetAliasFromConversation( conversationName )
	string result
	if ( alias.slice( 0, 3 ) == "bc_" )
		result = "diag_imc_grunt" + voiceIndex + "_" + alias
	else
		result = alias
	return result
}
