global function UiNewnessQueries_LevelInit
global function UiNewnessQueries_LevelShutdown

global function OnNewnessQueryChangedUpdateButton
global function OnNewnessQueryChangedUpdatePanelTab

const bool NEWNESS_DEBUG = false

global struct UiNewnessQueriesStruct
{
	bool                                    isValid = false

	Newness_ReverseQuery                    GladiatorTab
	Newness_ReverseQuery                    ArmoryTab

	table<ItemFlavor, Newness_ReverseQuery> CharacterButton

	table<ItemFlavor, Newness_ReverseQuery> CharacterSkinsTab
	table<ItemFlavor, Newness_ReverseQuery> CharacterCardTab
	table<ItemFlavor, Newness_ReverseQuery> CharacterFinishersTab
	table<ItemFlavor, Newness_ReverseQuery> CharacterQuipsTab

	table<ItemFlavor, Newness_ReverseQuery> GCardFramesSectionButton
	table<ItemFlavor, Newness_ReverseQuery> GCardStancesSectionButton
	table<ItemFlavor, Newness_ReverseQuery> GCardBadgesSectionButton
	table<ItemFlavor, Newness_ReverseQuery> GCardTrackersSectionButton

	table<ItemFlavor, Newness_ReverseQuery> CharacterIntroQuipSectionButton
	table<ItemFlavor, Newness_ReverseQuery> CharacterKillQuipSectionButton

	table<ItemFlavor, Newness_ReverseQuery> WeaponCategoryButton
	table<ItemFlavor, Newness_ReverseQuery> WeaponTab
}

global UiNewnessQueriesStruct& NEWNESS_QUERIES

void function UiNewnessQueries_LevelInit()
{
	UiNewnessQueriesStruct nq
	NEWNESS_QUERIES = nq

	//
	array<Newness_ReverseQuery> characterButtonRQList = []

	foreach( ItemFlavor character in GetAllCharacters() )
	{
		Newness_ReverseQuery characterSkinsTabRQ
		Newness_ReverseQuery_Setup( characterSkinsTabRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_CharacterSkin( character ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterSkinsTab[character] <- characterSkinsTabRQ

		Newness_ReverseQuery gcardFramesSectionButtonRQ
		Newness_ReverseQuery_Setup( gcardFramesSectionButtonRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_GladiatorCardFrame( character ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.GCardFramesSectionButton[character] <- gcardFramesSectionButtonRQ

		Newness_ReverseQuery gcardStancesSectionButtonRQ
		Newness_ReverseQuery_Setup( gcardStancesSectionButtonRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_GladiatorCardStance( character ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.GCardStancesSectionButton[character] <- gcardStancesSectionButtonRQ

		Newness_ReverseQuery gcardBadgesSectionButtonRQ
		Newness_ReverseQuery_Setup( gcardBadgesSectionButtonRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_GladiatorCardBadge( character, 0 ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.GCardBadgesSectionButton[character] <- gcardBadgesSectionButtonRQ

		Newness_ReverseQuery gcardTrackersSectionButtonRQ
		Newness_ReverseQuery_Setup( gcardTrackersSectionButtonRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_GladiatorCardStatTracker( character, 0 ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.GCardTrackersSectionButton[character] <- gcardTrackersSectionButtonRQ

		Newness_ReverseQuery characterCardTabRQ
		Newness_ReverseQuery_Setup( characterCardTabRQ, [ gcardFramesSectionButtonRQ, gcardStancesSectionButtonRQ, gcardBadgesSectionButtonRQ, gcardTrackersSectionButtonRQ, ], [] )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterCardTab[character] <- characterCardTabRQ

		Newness_ReverseQuery characterFinishersTabRQ
		Newness_ReverseQuery_Setup( characterFinishersTabRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_CharacterExecution( character ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterFinishersTab[character] <- characterFinishersTabRQ

		Newness_ReverseQuery characterIntroQuipSectionButtonRQ
		Newness_ReverseQuery_Setup( characterIntroQuipSectionButtonRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_CharacterIntroQuip( character ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterIntroQuipSectionButton[character] <- characterIntroQuipSectionButtonRQ

		Newness_ReverseQuery characterKillQuipSectionButtonRQ
		Newness_ReverseQuery_Setup( characterKillQuipSectionButtonRQ, [], GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_CharacterKillQuip( character ) ) )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterKillQuipSectionButton[character] <- characterKillQuipSectionButtonRQ

		Newness_ReverseQuery characterQuipsTabRQ
		Newness_ReverseQuery_Setup( characterQuipsTabRQ, [ characterIntroQuipSectionButtonRQ, characterKillQuipSectionButtonRQ ], [] )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterQuipsTab[character] <- characterQuipsTabRQ

		Newness_ReverseQuery characterButtonRQ
		Newness_ReverseQuery_Setup( characterButtonRQ, [ characterSkinsTabRQ, characterCardTabRQ, characterFinishersTabRQ, characterQuipsTabRQ ], [ character ] )
		#if(false)

#endif
		NEWNESS_QUERIES.CharacterButton[character] <- characterButtonRQ

		characterButtonRQList.append( characterButtonRQ )
	}

	Newness_ReverseQuery_Setup( NEWNESS_QUERIES.GladiatorTab, characterButtonRQList, [] )
	#if(false)

#endif


	//

	array<Newness_ReverseQuery> weaponCategoryButtonRQList

	foreach ( ItemFlavor category in GetAllWeaponCategories() )
	{
		array<Newness_ReverseQuery> weaponTabRQList = []

		foreach ( ItemFlavor weapon in GetAllWeaponsInCategory( category ) )
		{
			Newness_ReverseQuery weaponTabRQ
			array<ItemFlavor> flavorDependencies = []
			flavorDependencies.extend( GetValidItemFlavorsForLoadoutSlot( EHI_null, Loadout_WeaponSkin( weapon ) ) )
			flavorDependencies.append( weapon ) //
			Newness_ReverseQuery_Setup( weaponTabRQ, [], flavorDependencies )
			#if(false)

#endif
			NEWNESS_QUERIES.WeaponTab[weapon] <- weaponTabRQ

			weaponTabRQList.append( weaponTabRQ )
		}

		Newness_ReverseQuery categoryButtonRQ
		Newness_ReverseQuery_Setup( categoryButtonRQ, weaponTabRQList, [] )
		#if(false)

#endif
		NEWNESS_QUERIES.WeaponCategoryButton[category] <- categoryButtonRQ

		weaponCategoryButtonRQList.append( categoryButtonRQ )
	}

	Newness_ReverseQuery_Setup( NEWNESS_QUERIES.ArmoryTab, weaponCategoryButtonRQList, [] )
	#if(false)

#endif

	nq.isValid = true
}

void function UiNewnessQueries_LevelShutdown()
{
	NEWNESS_QUERIES.isValid = false
}


void function OnNewnessQueryChangedUpdateButton( int newCount, var button )
{
	Hud_SetNew( button, (newCount > 0) )
}


void function OnNewnessQueryChangedUpdatePanelTab( int newCount, var panel )
{
	SetPanelTabNew( panel, (newCount > 0) )
}


#if(false)






#endif



